@model ECommerce.Web.Models.Customer

@using (Html.BeginForm("Create", "Customer", FormMethod.Post, new { @class = "form-horizontal form-label-left",@id="customerForm", @role = "form", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="MaterialUnit">
                Name
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control col-md-7 col-xs-12 txtRequired", @id = "txtName", @required = "required", @type = "text", @placeholder = "Name" })
                @Html.ValidationMessageFor(model => model.Name, null, new { @class = "spnRequired" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="MaterialUnit">
                Phone
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.PhoneNo, new { @class = "form-control col-md-7 col-xs-12 txtRequired", @id = "txtPhoneNo", @required = "required", @type = "text", @placeholder = "Phone No" })
                @Html.ValidationMessageFor(model => model.PhoneNo, null, new { @class = "spnRequired" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="MaterialUnit">
                Address
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextAreaFor(model => model.Address, new { @class = "form-control col-md-7 col-xs-12 ", @id = "txtName", @type = "text", @placeholder = "Address" })
                @Html.ValidationMessageFor(model => model.Address, null, new { @class = "" })
            </div>
        </div>
        <div class="form-group">
            
        </div>



    </div>
}

<script>
    $(function () {
        $('subscribe-email-form').on('submit', function (e) {
            e.preventDefault();
            $.ajax({
                url: "/notifications/subscribe/",
                type: "POST",
                data: $("subscribe-email-form").serialize(),
                success: function (data) {
                    alert("Successfully submitted.")
                }
            });
        });
    });

    
</script>